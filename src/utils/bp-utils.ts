// BP Centile Table Data
export const bpCentileTable = {
  boys: {
    age: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16"],
    heightPercentile: ["5%", "10%", "25%", "50%", "75%", "90%", "95%"],
    height: [
      [77.2, 78.3, 80.2, 82.4, 84.6, 86.7, 87.9],
      [86.1, 87.4, 89.6, 92.1, 94.7, 97.1, 98.5],
      [92.5, 93.9, 96.3, 99, 101.8, 104.3, 105.8],
      [98.5, 100.2, 102.9, 105.9, 108.9, 111.5, 113.2],
      [104.4, 106.2, 109.1, 112.4, 115.7, 118.6, 120.3],
      [110.3, 112.2, 115.3, 118.9, 122.4, 125.6, 127.5],
      [116.1, 118, 121.4, 125.1, 128.9, 132.4, 134.5],
      [121.4, 123.5, 127, 131, 135.1, 138.8, 141],
      [126, 128.3, 132.1, 136.3, 140.7, 144.7, 147.1],
      [130.2, 132.7, 136.7, 141.3, 145.9, 150.1, 152.7],
      [134.7, 137.3, 141.5, 146.4, 151.3, 155.8, 158.6],
      [140.3, 143, 147.5, 152.7, 157.9, 162.6, 165.5],
      [147, 150, 154.9, 160.3, 165.7, 170.5, 173.4],
      [153.3, 156.6, 161.9, 167.7, 173.6, 178.7, 181.9],
      [158.4, 162.1, 167.6, 173.6, 179.7, 185.1, 188.5],
      [162.8, 166.8, 172.5, 178.6, 184.8, 190.3, 193.8]
    ],
    sbp: [
      [85, 85, 86, 86, 87, 88, 88, 98, 99, 99, 100, 100, 101, 101, 102, 102],
      [87, 87, 88, 89, 89, 90, 91, 100, 100, 101, 102, 103, 103, 104, 104, 105],
      [88, 89, 89, 90, 91, 92, 92, 101, 102, 102, 103, 104, 105, 105, 106, 106],
      [90, 90, 91, 92, 93, 94, 94, 102, 103, 104, 105, 105, 106, 107, 107, 108],
      [91, 92, 93, 94, 95, 96, 96, 103, 104, 105, 106, 107, 108, 108, 109, 109],
      [93, 93, 94, 95, 96, 97, 98, 105, 105, 106, 107, 109, 110, 110, 108, 109],
      [94, 94, 95, 97, 98, 98, 99, 106, 107, 108, 109, 110, 111, 111, 110, 111],
      [95, 96, 97, 98, 99, 99, 100, 107, 108, 109, 110, 111, 112, 112, 111, 112],
      [96, 97, 98, 99, 100, 101, 101, 107, 108, 109, 110, 112, 113, 114, 112, 113],
      [97, 98, 99, 100, 101, 102, 103, 108, 109, 111, 112, 113, 115, 116, 115, 116],
      [99, 99, 101, 102, 103, 104, 106, 110, 111, 112, 114, 116, 117, 118, 117, 118],
      [101, 101, 102, 104, 106, 108, 109, 113, 114, 115, 117, 119, 121, 122, 119, 120],
      [103, 104, 105, 108, 110, 111, 112, 115, 116, 118, 121, 124, 126, 127, 121, 122],
      [106, 107, 109, 112, 115, 117, 118, 122, 124, 127, 130, 133, 135, 137, 125, 127],
      [108, 110, 113, 116, 119, 121, 123, 127, 129, 133, 136, 139, 142, 144, 128, 130],
      [111, 113, 115, 119, 122, 124, 127, 131, 133, 137, 140, 144, 147, 150, 130, 133]
    ],
    dbp: [
      [40, 40, 40, 41, 41, 42, 42, 52, 52, 53, 53, 54, 54, 54, 54, 54],
      [43, 43, 44, 44, 45, 46, 46, 55, 55, 56, 56, 57, 58, 58, 57, 58],
      [45, 46, 46, 47, 48, 49, 49, 58, 58, 59, 59, 60, 61, 61, 60, 61],
      [48, 49, 49, 50, 51, 52, 52, 60, 61, 62, 62, 63, 64, 64, 63, 64],
      [51, 51, 52, 53, 54, 55, 55, 63, 64, 65, 65, 66, 67, 67, 66, 67],
      [54, 54, 55, 56, 57, 57, 58, 66, 66, 67, 68, 69, 70, 70, 69, 70],
      [56, 56, 57, 58, 59, 59, 60, 68, 68, 69, 70, 71, 72, 72, 71, 72],
      [57, 57, 58, 59, 60, 61, 61, 69, 70, 71, 72, 73, 73, 74, 72, 73],
      [58, 58, 59, 60, 61, 62, 62, 70, 71, 72, 73, 74, 74, 75, 73, 74],
      [59, 59, 60, 61, 61, 62, 63, 71, 72, 73, 74, 75, 75, 76, 74, 75],
      [61, 61, 62, 63, 63, 64, 64, 72, 73, 74, 75, 75, 76, 76, 75, 76],
      [62, 62, 62, 63, 64, 64, 65, 73, 74, 75, 75, 76, 77, 77, 76, 77],
      [63, 63, 63, 64, 65, 65, 65, 74, 74, 75, 75, 76, 77, 77, 76, 77],
      [65, 65, 66, 67, 68, 69, 69, 77, 78, 79, 79, 80, 81, 81, 80, 81],
      [67, 67, 68, 69, 70, 71, 71, 79, 80, 81, 82, 83, 83, 84, 83, 84],
      [69, 69, 70, 71, 72, 73, 73, 81, 82, 83, 84, 85, 86, 86, 85, 86]
    ]
  },
  girls: {
    age: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16"],
    heightPercentile: ["5%", "10%", "25%", "50%", "75%", "90%", "95%"],
    height: [
      [75.4, 76.6, 78.6, 80.8, 83, 84.9, 86.1],
      [84.9, 86.3, 88.6, 91.1, 93.7, 96, 97.4],
      [91, 92.4, 94.9, 97.6, 100.5, 103.1, 104.6],
      [97.2, 98.8, 101.4, 104.5, 107.6, 110.5, 112.2],
      [103.6, 105.3, 108.2, 111.5, 114.9, 118.1, 120],
      [110, 111.8, 114.9, 118.4, 122.1, 125.6, 127.7],
      [115.9, 117.8, 121.1, 124.9, 128.8, 132.5, 134.7],
      [121, 123, 126.5, 130.6, 134.7, 138.5, 140.9],
      [125.3, 127.6, 131.3, 135.6, 140.1, 144.1, 146.6],
      [129.7, 132.2, 136.3, 141, 145.8, 150.2, 152.8],
      [135.6, 138.3, 142.8, 147.8, 152.8, 157.3, 160],
      [142.8, 145.5, 149.9, 154.8, 159.6, 163.8, 166.4],
      [148.1, 150.6, 154.7, 159.2, 163.7, 167.8, 170.2],
      [150.6, 153, 156.9, 161.3, 165.7, 169.7, 172.1],
      [151.7, 154, 157.9, 162.3, 166.7, 170.6, 173],
      [152.1, 154.5, 158.4, 162.8, 167.1, 171.1, 173.4]
    ],
    sbp: [
      [84, 85, 86, 86, 87, 88, 88, 98, 99, 99, 100, 100, 101, 101, 102, 102],
      [87, 87, 88, 89, 90, 91, 91, 101, 101, 102, 103, 104, 105, 106, 104, 105],
      [88, 89, 89, 90, 91, 92, 93, 102, 103, 104, 104, 105, 106, 107, 106, 107],
      [89, 90, 91, 92, 93, 94, 94, 103, 104, 105, 106, 107, 108, 108, 107, 108],
      [90, 91, 92, 93, 94, 95, 96, 104, 105, 106, 107, 108, 109, 110, 108, 109],
      [92, 92, 93, 94, 96, 97, 97, 105, 106, 107, 109, 110, 111, 111, 110, 111],
      [92, 93, 94, 95, 97, 98, 99, 106, 106, 107, 109, 110, 112, 112, 111, 112],
      [93, 94, 95, 97, 98, 99, 100, 107, 107, 108, 110, 111, 113, 113, 112, 113],
      [95, 95, 97, 98, 99, 100, 101, 108, 108, 109, 111, 112, 114, 114, 113, 114],
      [96, 97, 98, 99, 101, 102, 103, 109, 110, 111, 113, 115, 116, 116, 115, 116],
      [98, 99, 101, 102, 104, 105, 106, 111, 112, 114, 116, 118, 120, 120, 118, 120],
      [102, 102, 104, 105, 107, 108, 108, 114, 115, 116, 118, 120, 122, 122, 120, 122],
      [104, 105, 106, 107, 108, 108, 109, 116, 117, 119, 121, 122, 123, 123, 121, 122],
      [105, 106, 107, 108, 109, 109, 109, 118, 118, 120, 122, 123, 123, 123, 122, 122],
      [105, 106, 107, 108, 109, 109, 109, 118, 119, 121, 122, 123, 124, 124, 123, 124],
      [106, 107, 108, 109, 109, 110, 110, 119, 120, 122, 123, 124, 124, 124, 124, 125]
    ],
    dbp: [
      [41, 42, 42, 43, 44, 45, 46, 54, 55, 56, 56, 57, 58, 58, 59, 59],
      [45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 61, 62, 63, 63, 64, 64],
      [48, 48, 49, 50, 51, 53, 53, 62, 63, 64, 65, 66, 67, 67, 66, 67],
      [50, 51, 52, 53, 54, 55, 55, 64, 65, 66, 67, 68, 69, 69, 68, 69],
      [52, 52, 53, 55, 56, 57, 58, 66, 67, 68, 69, 70, 71, 71, 70, 71],
      [54, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 73, 72, 73],
      [55, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 73, 74, 74, 73, 74],
      [56, 57, 58, 59, 60, 61, 61, 70, 71, 72, 73, 74, 74, 75, 74, 75],
      [57, 58, 59, 60, 61, 62, 62, 71, 72, 73, 74, 75, 75, 76, 75, 76],
      [58, 59, 60, 61, 61, 62, 63, 72, 73, 74, 75, 75, 76, 76, 76, 77],
      [60, 60, 61, 62, 63, 63, 64, 74, 74, 75, 76, 76, 77, 77, 77, 77],
      [61, 61, 62, 63, 63, 64, 64, 75, 75, 75, 76, 77, 77, 77, 77, 77],
      [62, 62, 63, 64, 65, 65, 65, 75, 75, 75, 76, 77, 78, 78, 78, 78],
      [63, 63, 64, 65, 65, 65, 65, 76, 76, 76, 77, 77, 77, 77, 77, 78],
      [64, 64, 65, 66, 67, 67, 67, 77, 77, 77, 78, 78, 78, 78, 78, 79],
      [64, 64, 65, 66, 67, 67, 67, 78, 78, 78, 79, 79, 79, 79, 79, 80]
    ]
  }
};

// Find nearest index in array
export function findNearestIndex(arr: number[], value: number): number {
  return arr.reduce((prev, curr) => 
    Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev
  );
}

// Calculate Mean Arterial Pressure (MAP)
export function calculateMAP(sbp: number, dbp: number): string {
  const map = dbp + (sbp - dbp) / 3;
  return map.toFixed(0);
}

// Find height percentile
export function findHeightPercentile(
  heightValues: number[], 
  height: number, 
  heightPercentiles: string[]
): string {
  if (heightValues.length === 0 || heightPercentiles.length === 0) {
    return "Invalid data";
  }

  if (height <= heightValues[0]) {
    return heightPercentiles[0];
  } else if (height >= heightValues[heightValues.length - 1]) {
    return heightPercentiles[heightPercentiles.length - 1];
  }

  for (let i = 0; i < heightValues.length - 1; i++) {
    if (heightValues[i] <= height && height < heightValues[i + 1]) {
      const lowerValue = heightValues[i];
      const upperValue = heightValues[i + 1];
      const lowerPercentile = parseFloat(heightPercentiles[i]);
      const upperPercentile = parseFloat(heightPercentiles[i + 1]);
      
      const percentile = lowerPercentile + 
        (upperPercentile - lowerPercentile) * 
        (height - lowerValue) / 
        (upperValue - lowerValue);
      
      return percentile.toFixed(2) + "%";
    }
  }

  return "Unknown";
}

// Get centile values for specified parameters
export function getCentileValues(sex: 'boys' | 'girls', age: number, height: number) {
  const ageIndex = bpCentileTable[sex].age.indexOf(age.toString());
  if (ageIndex === -1) {
    return "Invalid age";
  }

  const heightValues = bpCentileTable[sex].height[ageIndex];
  if (!heightValues || heightValues.length === 0) {
    return "Invalid height data";
  }

  const heightPercentile = findHeightPercentile(
    heightValues, 
    height, 
    bpCentileTable[sex].heightPercentile
  );

  const nearestHeight = findNearestIndex(heightValues, height);
  const nearestHeightIndex = heightValues.indexOf(nearestHeight);

  const sbpValues = bpCentileTable[sex].sbp[ageIndex];
  const dbpValues = bpCentileTable[sex].dbp[ageIndex];

  const sbp50 = sbpValues[nearestHeightIndex];
  const sbp90 = sbpValues[nearestHeightIndex + 7] || sbpValues[sbpValues.length - 1];
  const sbp95 = sbpValues[nearestHeightIndex + 14] || sbpValues[sbpValues.length - 1];
  const sbp9512 = sbp95 + 12;
  const sbp99 = sbpValues[nearestHeightIndex + 21] || sbpValues[sbpValues.length - 1];

  const dbp50 = dbpValues[nearestHeightIndex];
  const dbp90 = dbpValues[nearestHeightIndex + 7] || dbpValues[dbpValues.length - 1];
  const dbp95 = dbpValues[nearestHeightIndex + 14] || dbpValues[dbpValues.length - 1];
  const dbp9512 = dbp95 + 12;
  const dbp99 = dbpValues[nearestHeightIndex + 21] || dbpValues[dbpValues.length - 1];

  const map50 = calculateMAP(sbp50, dbp50);
  const map90 = calculateMAP(sbp90, dbp90);
  const map95 = calculateMAP(sbp95, dbp95);
  const map9512 = calculateMAP(sbp9512, dbp9512);
  const map99 = calculateMAP(sbp99, dbp99);

  // Calculations for the 5th centile based on clinical formulas
  const sbp5 = 2 * age + 65;
  const map5 = 1.5 * age + 40;
  const dbp5 = map5 - (sbp5 - map5) / 3;

  return {
    sbp50,
    sbp90,
    sbp95,
    sbp9512,
    sbp99,
    dbp50,
    dbp90,
    dbp95,
    dbp9512,
    dbp99,
    map50,
    map90,
    map95,
    map9512,
    map99,
    height50thPercentile: heightValues[3],
    heightPercentile,
    sbp5,
    dbp5: dbp5.toFixed(0),
    map5: map5.toFixed(0)
  };
} 